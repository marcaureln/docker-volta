name: Build images

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - 'Dockerfile.slim'
      - 'latest.txt'
  workflow_dispatch:
    inputs:
      build-all:
        description: 'Build all versions'
        type: boolean
        default: false

jobs:
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      volta_latest: ${{ steps.volta_latest.outputs.latest }}
      volta_versions: ${{ inputs.build-all == true && steps.versions.outputs.versions || steps.volta_latest.outputs.versions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get latest version
        id: volta_latest
        run: |
          echo "latest=$(head -n 1 latest.txt)" >> "$GITHUB_OUTPUT"
          echo "versions=[\"$(head -n 1 latest.txt)\"]" >> "$GITHUB_OUTPUT"
      - name: Get all versions
        if: inputs.build-all == true
        id: versions
        run: |
          json_array=$(cat releases.txt | awk '{printf "\"%s\", ", $0}' | sed 's/, $//')
          echo "versions=[$json_array]" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    needs: define-matrix
    continue-on-error: true
    strategy:
      matrix:
        os: [bookworm, bullseye]
        version: ${{ fromJSON(needs.define-matrix.outputs.volta_versions) }}
    env:
      VOLTA_LATEST: ${{ needs.define-matrix.outputs.volta_latest }}
      DEBIAN_LATEST: bookworm
      PLATFORMS: linux/amd64,linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Generate Docker tags (default)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/volta
          tags: |
            type=raw,value=latest,enable=${{ matrix.os == env.DEBIAN_LATEST }}
            type=raw,value=${{ matrix.version }},enable=${{ matrix.os == env.DEBIAN_LATEST }}
            type=raw,value=${{ matrix.version }}-${{ matrix.os }}

      - name: Build image and push (default)
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VOLTA_VERSION=${{ matrix.version }}
            DEBIAN_VERSION=${{ matrix.os }}

      - name: Generate Docker tags (slim)
        id: meta-slim
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/volta
          tags: |
            type=raw,value=slim,enable=${{ matrix.os == env.DEBIAN_LATEST }}
            type=raw,value=${{ matrix.version }}-slim,enable=${{ matrix.os == env.DEBIAN_LATEST }}
            type=raw,value=${{ matrix.version }}-${{ matrix.os }}-slim

      - name: Build image and push (slim)
        uses: docker/build-push-action@v6
        with:
          push: true
          file: Dockerfile.slim
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta-slim.outputs.tags }}
          labels: ${{ steps.meta-slim.outputs.labels }}
          build-args: |
            VOLTA_VERSION=${{ matrix.version }}
            DEBIAN_VERSION=${{ matrix.os }}
